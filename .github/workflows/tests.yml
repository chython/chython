name: Tests

on:
  push:
    branches: [ main, master, tests_update ]
  pull_request:
    branches: [ main, master, tests_update ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Install Cython
      run: |
        python -m pip install --upgrade pip
        pip install "cython>=3.0.5" setuptools wheel
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/*.pyx') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry config installer.max-workers 4
        poetry install --no-interaction --verbose --with dev
      timeout-minutes: 15
    
    - name: Clean Cython build
      run: |
        rm -rf build/
        rm -rf *.so
        find . -name "*.c" -delete
    
    - name: Force Cython recompilation
      run: poetry run pip install -e . --no-deps --force-reinstall
    
    - name: Run tests
      run: poetry run pytest tests/ -v 